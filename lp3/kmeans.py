# -*- coding: utf-8 -*-
"""Kmeans.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W-sKZl-OciokyjJVDSLqTs4OzFBIZS7K
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

df = pd.read_csv('https://raw.githubusercontent.com/Tanmay49/SEM7/main/ML/sales_data_sample.csv', encoding ="unicode_escape")
df.head()

df.info()

df=df[['QUANTITYORDERED',	'PRICEEACH',	'ORDERLINENUMBER','SALES',	'PRODUCTLINE',	'MSRP',	'PRODUCTCODE',	'COUNTRY',	'DEALSIZE']]
df.head()

# df_drop  = ['ADDRESSLINE1', 'ADDRESSLINE2', 'POSTALCODE', 'CITY', 'TERRITORY', 'PHONE', 'STATE', 'CONTACTFIRSTNAME', 'CONTACTLASTNAME', 'CUSTOMERNAME', 'ORDERNUMBER']
# df = df.drop(df_drop, axis=1)
# #

# df.drop(columns=['ORDERDATE','STATUS','MONTH_ID','QTR_ID','YEAR_ID'],inplace=True)
# df.head()

from sklearn.preprocessing import LabelEncoder
def convert_category(col):
  le=LabelEncoder()
  df[col]=le.fit_transform(df[col].values)

categories = ['PRODUCTLINE','PRODUCTCODE','COUNTRY','DEALSIZE']
for i in categories:
  convert_category(i)

df.head()

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
data=sc.fit_transform(df)

from sklearn.cluster import KMeans
wcss=[]
for k in range(1,15):
  kmeans=KMeans(n_clusters=k,random_state=15)
  kmeans.fit(data)
  wcss.append(kmeans.inertia_)

k = list(range(1,15))
plt.plot(k,wcss)
plt.xlabel('Clusters')
plt.ylabel('scores')
plt.title('Finding right number of clusters')
plt.grid()
plt.show()

kmeans=KMeans(n_clusters=4)

df['cluster no']=kmeans.fit_predict(data)

df.head()

