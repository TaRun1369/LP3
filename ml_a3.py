# -*- coding: utf-8 -*-
"""ML-A3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OEni6hinBh9FZslH8ujIcBFNGhRYM-DW
"""

import pandas as pd;

df = pd.read_csv('https://raw.githubusercontent.com/Tanmay49/SEM7/main/ML/Churn_Modelling.csv')

df

df = df.drop(['RowNumber','CustomerId','Surname'],axis = 1)

gender = pd.get_dummies(df['Gender'],drop_first = True)

geography = pd.get_dummies(df['Geography'],drop_first = True)

df = pd.concat([df,gender,geography],axis = 1)

df = df.drop(['Geography','Gender'],axis = 1)

df = df.dropna()

df

X = df.drop(['Exited'],axis = 1)
Y = df['Exited']
X

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X = sc.fit_transform(X)
X

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(X,Y)
from keras.models import Sequential
from keras.layers import Dense

model = Sequential()
model.add(Dense(activation = 'relu',units = 6))
model.add(Dense(activation = 'relu',units = 6))
model.add(Dense(activation = 'sigmoid',units = 1))
model.compile(optimizer = 'adam',loss = 'binary_crossentropy',metrics = ['accuracy'])
model.fit(x_train,y_train,batch_size = 10,epochs = 50)

y_pred = model.predict(x_test)

y_pred = (y_pred > 0.5)

from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,y_pred))